[x] How to Document Technical Tasks? Describing Your Technical Tasks in a Lean Fashion Published on May 10
[x] What Patty Taught Me I spent all of last summer in Georgia. It was a different universe than the crowded streets and fast pace of New York City — where I live… Published on Feb 19
[x] How Do You Run A Postmortem? Our process has failed us! The payment feature went offline, our team didn’t have shippable code, and a user story was in progress for two… Published on Sep 17, 2018
[x] Why You Should Erase Your Team’s Action Items. I am a member of an agile team. Every Friday afternoon we hold a retrospective. My team members grab a beer or their favorite soft drink… Published on May 4, 2018
[x] The Best Way To Improve There is a lot written about how to improve, and what you should start doing. Sometimes the most impactful thing to do is to stop doing… Published on Apr 29, 2018

[] What the Heck is a Technical Retrospective? How does your team improve their software processes? Published on Mar 28
[] Why I Write Software The story of my first program Published on Feb 28
[] Making Invalid State Impossible: In TypeScript and React Since most applications can be represented by state machines, it is beneficial to make valid states in your program as clear as possible… Published on Oct 29, 2018
[] Which Type Of Tests Should You Write? When test driving a system, it can be tricky to know which type of test to use and when. Rather than talk about the testing pyramid, I want… Published on Sep 10, 2018
[] Testing Patterns in Ruby: Contract Testing Maintain shared behavior of multiple implementations by making them pass the same tests. Published on Aug 20, 2018
[] Adding GraphQL to Your Spring App: Made Easy I am sure that you have heard about GraphQL. It is the latest pattern that everyone is talking about. I want to walk you through adding… Published on Aug 13, 2018
[] Patterns of Sharing Work While I was researching different ways for teams to increase their throughput, I stumbled upon a distinction that is often not made… Published on Aug 1, 2018
[] Lean Blogging How I escaped my fear of releasing posts, by releasing them often. Published on Jul 23, 2018
[] Maybe In Ruby Lessons learned. Published on Jun 28, 2018
[] Co-Signing For Technical Debt Product and engineering need to see each other as co-signers on technical debt. The idea isn’t to say “no” to all technical debt, as you… Published on Jun 25, 2018
[] When Should You Refactor? I find that there are two moments that best suit using refactoring; practicing TDD and adding new features. Published on Jun 9, 2018
[] Technical Retrospective What, Why, and How? Published on Jun 9, 2018
[] How To Stop Past Coworkers From Calling You “I Have To Tell You About The Future” Published on Jun 5, 2018
[] Why You Should Do One Story Until It’s Done Published on May 28, 2018
[] Learn A Long Forgotten Programming Technique Published on May 20, 2018
[] How To Properly Apply The DRY Principle Published on May 17, 2018
[] Why I Manage My Expectations Years ago, I watched Kent Beck’s talk on finding ease at work. He described death marches and unsustainable pace. He told stories of people… Published on May 11, 2018
[] Don’t Repeat Yourself is Misunderstood (20 min read) Published on May 6, 2018
